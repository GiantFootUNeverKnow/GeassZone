#include <iostream>
#include <algorithm>
#include <vector>
#include <stdio.h>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <stack>
#include <queue>
#include <list>
#include <iomanip>
#include <cmath>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <string>
#include <utility>
#include <functional>

using namespace std;

typedef long long int LLI;
typedef vector<int> VI;
typedef vector<vector<int> > VVI;
typedef pair<int, int> PII;
typedef vector<pair<int, int> > VPI;
typedef vector<double> VD;
typedef vector<vector<double> > VVD;
typedef list<int> LI;

const int EPIS = 1e-7;
const int max = 2000000000;

int dp[2001][2001];
string s1, s2;

int main(){
    int tcase;
    cin >> tcase;
    while (tcase--){
        cin >> s1 >> s2;
        int n = s1.size();
        int m = s2.size();
        for (int i = 0; i <= n; i++)
            dp[i][0] = i;
        for (int j = 0; j <= m; j++)
            dp[0][j] = j;
        for (int i = 1; i <= n; i++)
            for (int j = 1; j <= m; j++){
                dp[i][j] = min(dp[i-1][j], dp[i][j-1]) + 1;
                if (s1[i-1] == s2[j-1])
                    dp[i][j] = min(dp[i][j], dp[i-1][j-1]);    
                else
                    dp[i][j] = min(dp[i][j], dp[i-1][j-1] + 1);
            }
        cout << dp[n][m] << endl;
        /*for (int i = 0; i <= n; i++)
        {
            for (int j = 0; j <= m; j++)
                cerr << dp[i][j] << " ";
            cerr << endl;
        }*/
    }
    return 0;
}
