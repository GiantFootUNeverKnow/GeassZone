#include <iostream>
#include <algorithm>
#include <vector>
#include <stdio.h>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <stack>
#include <queue>
#include <iomanip>
#include <cmath>
#include <climits>
#include <cstdlib>
#include <string>
#include <utility>
#include <cstring>

using namespace std;

typedef vector<int> VI;
typedef vector<vector<int> > VVI;
typedef pair<int, int> PII;
typedef vector<pair<int, int> > VPI;
typedef vector<double> VD;
typedef vector<vector<double> > VVD;

const int EPIS = 1e-7;
const int max = 2000000000;

int DNA[10];
int dish[42];

void print_dish(){
    for (int i = 1; i < 41; i++){
        switch (dish[i]) {
            case 0:
                cout << ' ';
                break;
            case 1:
                cout << '.';
                break;
            case 2:
                cout << 'x';
                break;
            case 3:
                cout << 'W';
                break;
        }
    }
    cout << endl;
}

void update_dish(){
    int tmp[42];
    for (int i = 1; i < 41; i++)
        tmp[i] = DNA[dish[i - 1] + dish[i] + dish[i + 1]];
    for (int i = 1; i < 41; i++)
        dish[i] = tmp[i];
}

int main(){
    int tcase;
    cin >> tcase;
    string emp;
    while(tcase--){
        cout << emp;
        for (int i = 0; i < 10; i++)
            cin >> DNA[i];
        memset(dish, 0, sizeof dish);
        dish[20] = 1;
        for (int t = 0; t < 50; t++){
            print_dish();
            update_dish();
        }
        if (tcase)
            cout << endl;
    }
    return 0;
}
